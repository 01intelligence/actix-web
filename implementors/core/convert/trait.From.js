(function() {var implementors = {};
implementors["actix_http"] = [{"text":"impl From&lt;&amp;'static str&gt; for Body","synthetic":false,"types":[]},{"text":"impl From&lt;&amp;'static [u8]&gt; for Body","synthetic":false,"types":[]},{"text":"impl From&lt;Vec&lt;u8, Global&gt;&gt; for Body","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for Body","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a String&gt; for Body","synthetic":false,"types":[]},{"text":"impl From&lt;Bytes&gt; for Body","synthetic":false,"types":[]},{"text":"impl From&lt;BytesMut&gt; for Body","synthetic":false,"types":[]},{"text":"impl From&lt;Value&gt; for Body","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;SizedStream&lt;S&gt;&gt; for Body <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Stream&lt;Item = Result&lt;Bytes, Error&gt;&gt; + Unpin + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, E&gt; From&lt;BodyStream&lt;S&gt;&gt; for Body <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Stream&lt;Item = Result&lt;Bytes, E&gt;&gt; + Unpin + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Into&lt;Error&gt; + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ConnectError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ConnectError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ConnectError","synthetic":false,"types":[]},{"text":"impl From&lt;ResolveError&gt; for ConnectError","synthetic":false,"types":[]},{"text":"impl From&lt;ConnectError&gt; for ConnectError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for InvalidUrl","synthetic":false,"types":[]},{"text":"impl From&lt;InvalidUrl&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;ConnectError&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;ParseError&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for FreezeRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;InvalidUrl&gt; for FreezeRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;FreezeRequestError&gt; for SendRequestError","synthetic":false,"types":[]},{"text":"impl From&lt;usize&gt; for KeepAlive","synthetic":false,"types":[]},{"text":"impl From&lt;Option&lt;usize&gt;&gt; for KeepAlive","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a str&gt; for DispositionType","synthetic":false,"types":[]},{"text":"impl From&lt;&amp;'_ str&gt; for ContentEncoding","synthetic":false,"types":[]},{"text":"impl From&lt;HeaderMap&lt;HeaderValue&gt;&gt; for HeaderMap","synthetic":false,"types":[]},{"text":"impl From&lt;RequestHead&gt; for RequestHeadType","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;Payload&gt; for Payload&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;Payload&gt; for Payload&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; From&lt;RecvStream&gt; for Payload&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; for Payload","synthetic":false,"types":[]},{"text":"impl From&lt;Message&lt;RequestHead&gt;&gt; for Request&lt;PayloadStream&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B&gt; From&lt;Response&lt;B&gt;&gt; for ResponseBuilder","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a ResponseHead&gt; for ResponseBuilder","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Into&lt;Response&gt;, E:&nbsp;Into&lt;Error&gt;&gt; From&lt;Result&lt;I, E&gt;&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;ResponseBuilder&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;&amp;'static str&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;&amp;'static [u8]&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;String&gt; for Response","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a String&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;Bytes&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;BytesMut&gt; for Response","synthetic":false,"types":[]},{"text":"impl From&lt;()&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Infallible&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Response","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ResponseError + 'static&gt; From&lt;T&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Response&lt;Body&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;ResponseBuilder&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ParseError","synthetic":false,"types":[]},{"text":"impl From&lt;InvalidUri&gt; for ParseError","synthetic":false,"types":[]},{"text":"impl From&lt;Utf8Error&gt; for ParseError","synthetic":false,"types":[]},{"text":"impl From&lt;FromUtf8Error&gt; for ParseError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ParseError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for PayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;Option&lt;Error&gt;&gt; for PayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for PayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;BlockingError&lt;Error&gt;&gt; for PayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for DispatchError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for DispatchError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for DispatchError","synthetic":false,"types":[]},{"text":"impl From&lt;ParseError&gt; for DispatchError","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Message&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for OpCode","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for CloseCode","synthetic":false,"types":[]},{"text":"impl From&lt;CloseCode&gt; for CloseReason","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Into&lt;String&gt;&gt; From&lt;(CloseCode, T)&gt; for CloseReason","synthetic":false,"types":[]},{"text":"impl From&lt;usize&gt; for ProtocolError","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for ProtocolError","synthetic":false,"types":[]},{"text":"impl From&lt;OpCode&gt; for ProtocolError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for ProtocolError","synthetic":false,"types":[]}];
implementors["actix_multipart"] = [{"text":"impl From&lt;PayloadError&gt; for MultipartError","synthetic":false,"types":[]},{"text":"impl From&lt;ParseError&gt; for MultipartError","synthetic":false,"types":[]}];
implementors["actix_web"] = [{"text":"impl&lt;T:&nbsp;?Sized&gt; From&lt;Arc&lt;T&gt;&gt; for Data&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;ParseError&gt; for UrlGenerationError","synthetic":false,"types":[]},{"text":"impl From&lt;(usize, usize)&gt; for UrlencodedError","synthetic":false,"types":[]},{"text":"impl From&lt;PayloadError&gt; for UrlencodedError","synthetic":false,"types":[]},{"text":"impl From&lt;PayloadError&gt; for JsonPayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for JsonPayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for PathError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for QueryPayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;PayloadError&gt; for ReadlinesError","synthetic":false,"types":[]},{"text":"impl From&lt;ContentTypeError&gt; for ReadlinesError","synthetic":false,"types":[]},{"text":"impl&lt;B&gt; From&lt;ServiceResponse&lt;B&gt;&gt; for Response&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;L, R&gt; From&lt;Either&lt;L, R&gt;&gt; for Either&lt;L, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;L, R&gt; From&lt;EitherExtractError&lt;L, R&gt;&gt; for Error <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Into&lt;Error&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Into&lt;Error&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;T&gt; for Path&lt;T&gt;","synthetic":false,"types":[]}];
implementors["awc"] = [{"text":"impl From&lt;SendRequestError&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;(String, HeaderValue)&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;StatusCode&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;HeaderValue&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;ProtocolError&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;InvalidUrl&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for WsClientError","synthetic":false,"types":[]},{"text":"impl From&lt;PayloadError&gt; for JsonPayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;()&gt; for JsonPayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for JsonPayloadError","synthetic":false,"types":[]},{"text":"impl From&lt;SendRequestError&gt; for SendClientRequest","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for SendClientRequest","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for SendClientRequest","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()