(function() {var implementors = {};
implementors["actix_files"] = [{"text":"impl RefUnwindSafe for Directory","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Files","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NamedFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HttpRange","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FilesService","synthetic":true,"types":[]}];
implementors["actix_http"] = [{"text":"impl RefUnwindSafe for BodySize","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ResponseBody&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Body","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for BodyStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for SizedStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&gt; !RefUnwindSafe for HttpServiceBuilder&lt;T, S, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; !RefUnwindSafe for Connector&lt;T, U&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConnectError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidUrl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SendRequestError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FreezeRequestError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeepAlive","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ServiceConfig","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for Decoder&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for Encoder&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcceptCharset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Accept","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Allow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheControl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheDirective","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispositionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DispositionParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentDisposition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentLanguage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentEncoding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Date","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ETag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expires","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LastModified","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RequestHead","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RequestHeadType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResponseHead","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Message&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !RefUnwindSafe for Payload&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !RefUnwindSafe for Request&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !RefUnwindSafe for Response&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResponseBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&gt; !RefUnwindSafe for HttpService&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for BlockingError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PayloadError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DispatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContentTypeError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for InternalError&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientCodec","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientPayloadCodec","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Codec","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !RefUnwindSafe for Dispatcher&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpectHandler","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X&nbsp;=&nbsp;ExpectHandler, U&nbsp;=&nbsp;UpgradeHandler&gt; !RefUnwindSafe for H1Service&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !RefUnwindSafe for H1ServiceHandler&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UpgradeHandler","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; !RefUnwindSafe for SendResponse&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Message&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B, X, U&gt; !RefUnwindSafe for Dispatcher&lt;T, S, B, X, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S, B&gt; !RefUnwindSafe for H2Service&lt;T, S, B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestSeqBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestSeqInner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Codec","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; !RefUnwindSafe for Dispatcher&lt;S, T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloseCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloseReason","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ProtocolError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandshakeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Protocol","synthetic":true,"types":[]}];
implementors["actix_http_test"] = [{"text":"impl !RefUnwindSafe for TestServer","synthetic":true,"types":[]}];
implementors["actix_multipart"] = [{"text":"impl !RefUnwindSafe for MultipartError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Multipart","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Field","synthetic":true,"types":[]}];
implementors["actix_web"] = [{"text":"impl&lt;T, B&gt; !RefUnwindSafe for App&lt;T, B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AppService","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ServiceConfig","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; RefUnwindSafe for Data&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UrlGenerationError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UrlencodedError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JsonPayloadError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryPayloadError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadlinesError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AnyGuard","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AllGuard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionInfo","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Compat&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Condition&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DefaultHeaders","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ErrorHandlerResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !RefUnwindSafe for ErrorHandlers&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Logger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TrailingSlash","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NormalizePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Compress","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HttpRequest","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ReqData&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&nbsp;=&nbsp;ResourceEndpoint&gt; !RefUnwindSafe for Resource&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ResourceMap","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Route","synthetic":true,"types":[]},{"text":"impl&lt;T&nbsp;=&nbsp;ScopeEndpoint&gt; !RefUnwindSafe for Scope&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F, I, S, B&gt; !RefUnwindSafe for HttpServer&lt;F, I, S, B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ServiceRequest","synthetic":true,"types":[]},{"text":"impl&lt;B&nbsp;=&nbsp;Body&gt; !RefUnwindSafe for ServiceResponse&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WebService","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestServerConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestServer","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; RefUnwindSafe for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; !RefUnwindSafe for EitherExtractError&lt;L, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Form&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FormConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UrlEncoded&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Json&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JsonConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for JsonBody&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Path&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PayloadConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Query&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for QueryConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Readlines&lt;T&gt;","synthetic":true,"types":[]}];
implementors["actix_web_actors"] = [{"text":"impl&lt;A&gt; !RefUnwindSafe for HttpContext&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !RefUnwindSafe for WebsocketContext&lt;A&gt;","synthetic":true,"types":[]}];
implementors["awc"] = [{"text":"impl !RefUnwindSafe for ClientBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BoxedSocket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WsClientError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for JsonPayloadError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FrozenClientRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FrozenSendBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientRequest","synthetic":true,"types":[]},{"text":"impl&lt;S&nbsp;=&nbsp;Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Bytes, PayloadError&gt;&gt; + 'static, Global&gt;&gt;&gt; !RefUnwindSafe for ClientResponse&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for MessageBody&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, U&gt; !RefUnwindSafe for JsonBody&lt;S, U&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SendClientRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TestResponse","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WebsocketsRequest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Client","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()